// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model horario{
  id Int @id @default(autoincrement())
  Dia String
  Hora DateTime
  HorarioFin DateTime
  Disponibilidad disponibilidad[]
}

model servicio{
  id Int @id @default(autoincrement())
  Nombre String
  Descripcion String
  Precio Float
  Disponibilidad disponibilidad[]
}

model trabajador{
  id Int @id @default(autoincrement())
  Nombre String
  Apellido String
  Disponibilidad disponibilidad[]
}

model disponibilidad{
  Id Int @id @default(autoincrement())
  IdHorario Int
  IdTrabajador Int
  IdServicio Int
  Horario horario @relation(fields: [IdHorario], references: [id])
  Trabajador trabajador @relation(fields: [IdTrabajador], references: [id])
  Servicio servicio @relation(fields: [IdServicio], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  Role      Role?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id       Int     @id @default(autoincrement())
  role     Boolean
  author   User    @relation(fields: [authorId], references: [id])
  authorId Int     @unique
}

model Clientes {
  id        Int       @id @default(autoincrement())
  name      String
  lastName  String
  Reservas  Reservas?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Reservas {
  id               Int      @id @default(autoincrement())
  fechaReserva     DateTime
  cantidadPersonas Int
  cliente          Clientes @relation(fields: [clienteId], references: [id])
  clienteId        Int      @unique
}


